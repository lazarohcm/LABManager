<?php

namespace DoctrineProxies\__CG__\LabManager\Bean;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Projeto extends \LabManager\Bean\Projeto implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'id', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'nome', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'data_inicio', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'data_termino', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'imagem', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'texto', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'coordenador', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'laboratorio', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'membro_projeto', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'noticiaProjeto');
        }

        return array('__isInitialized__', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'id', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'nome', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'data_inicio', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'data_termino', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'imagem', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'texto', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'coordenador', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'laboratorio', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'membro_projeto', '' . "\0" . 'LabManager\\Bean\\Projeto' . "\0" . 'noticiaProjeto');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Projeto $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNome()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNome', array());

        return parent::getNome();
    }

    /**
     * {@inheritDoc}
     */
    public function getData_inicio()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getData_inicio', array());

        return parent::getData_inicio();
    }

    /**
     * {@inheritDoc}
     */
    public function getData_termino()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getData_termino', array());

        return parent::getData_termino();
    }

    /**
     * {@inheritDoc}
     */
    public function getImagem()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImagem', array());

        return parent::getImagem();
    }

    /**
     * {@inheritDoc}
     */
    public function getTexto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTexto', array());

        return parent::getTexto();
    }

    /**
     * {@inheritDoc}
     */
    public function getCoordenador()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoordenador', array());

        return parent::getCoordenador();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setNome($nome)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNome', array($nome));

        return parent::setNome($nome);
    }

    /**
     * {@inheritDoc}
     */
    public function setData_inicio($data_inicio)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setData_inicio', array($data_inicio));

        return parent::setData_inicio($data_inicio);
    }

    /**
     * {@inheritDoc}
     */
    public function setData_termino($data_termino)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setData_termino', array($data_termino));

        return parent::setData_termino($data_termino);
    }

    /**
     * {@inheritDoc}
     */
    public function setImagem($imagem)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImagem', array($imagem));

        return parent::setImagem($imagem);
    }

    /**
     * {@inheritDoc}
     */
    public function setTexto($texto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTexto', array($texto));

        return parent::setTexto($texto);
    }

    /**
     * {@inheritDoc}
     */
    public function setCoordenador($coordenador)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoordenador', array($coordenador));

        return parent::setCoordenador($coordenador);
    }

    /**
     * {@inheritDoc}
     */
    public function getLaboratorio()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLaboratorio', array());

        return parent::getLaboratorio();
    }

    /**
     * {@inheritDoc}
     */
    public function setLaboratorio($laboratorio)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLaboratorio', array($laboratorio));

        return parent::setLaboratorio($laboratorio);
    }

    /**
     * {@inheritDoc}
     */
    public function getMembroProjeto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMembroProjeto', array());

        return parent::getMembroProjeto();
    }

    /**
     * {@inheritDoc}
     */
    public function setMembroProjeto(\LabManager\Bean\MembroProjeto $membro_projeto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMembroProjeto', array($membro_projeto));

        return parent::setMembroProjeto($membro_projeto);
    }

    /**
     * {@inheritDoc}
     */
    public function getNoticiaProjeto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNoticiaProjeto', array());

        return parent::getNoticiaProjeto();
    }

    /**
     * {@inheritDoc}
     */
    public function setNoticiaProjeto($noticiaProjeto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNoticiaProjeto', array($noticiaProjeto));

        return parent::setNoticiaProjeto($noticiaProjeto);
    }

}
